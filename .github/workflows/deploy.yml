name: 'Terraform Infrastructure Provisioning with Security Scanning'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-setup:
    name: 'Setup Backend Resources'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v2

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: 'Terraform Init without Backend'
      run: terraform init -backend=false  # Initialize without using the backend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: 'Terraform Apply Backend Resources'
      run: terraform apply -auto-approve \
           -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
           -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
           -var="db_password=${{ secrets.DB_PASSWORD }}" \
           -var="mariadb_password=${{ secrets.MARIADB_PASSWORD }}" \
           -var="rds_db_password=${{ secrets.MYSQL_PASSWORD }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest
    needs: backend-setup  # Ensure this job runs after backend-setup

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v2

    - name: 'Set up Terraform with Backend'
      run: |
        # Reconfigure Terraform to use the backend now that it exists
        terraform init -reconfigure
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: 'Terraform Plan'
      run: terraform plan -out=tfplan \
           -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
           -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
           -var="db_password=${{ secrets.DB_PASSWORD }}" \
           -var="mariadb_password=${{ secrets.MARIADB_PASSWORD }}" \
           -var="rds_db_password=${{ secrets.MYSQL_PASSWORD }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: 'Upload Terraform Plan Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: tfplan

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve "tfplan" \
           -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
           -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
           -var="db_password=${{ secrets.DB_PASSWORD }}" \
           -var="mariadb_password=${{ secrets.MARIADB_PASSWORD }}" \
           -var="rds_db_password=${{ secrets.MYSQL_PASSWORD }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
