name: 'Terraform Infrastructure Provisioning with Security Scanning'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v2

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: 'Terraform Init'
      run: terraform init

    - name: 'Terraform Plan'
      run: terraform plan -var="db_password=${{ secrets.DB_PASSWORD }}" -out=tfplan

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve "tfplan"

  snyk:
    name: 'Snyk Security Scan'
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v2

    - name: 'Set up Snyk CLI'
      uses: snyk/actions/setup@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: 'Build Docker Image'
      run: docker build -t myapp:latest .

    - name: 'Scan Docker Image with Snyk'
      run: snyk container test myapp:latest --file=Dockerfile --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: 'Monitor Docker Image with Snyk'
      run: snyk container monitor myapp:latest --file=Dockerfile
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  aqua:
    name: 'Aqua Security Scan'
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v2

    - name: 'Aqua Security Scan'
      run: docker run -v $(pwd):/project aquasec/trivy:latest image --format json --output /project/results.json myapp:latest
